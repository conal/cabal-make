== Abstract ==

Cabal-make is an include file for [http://www.gnu.org/software/make GNU make] files to be used with [[Cabal]] in sharing Haskell packages.  It is intended mainly for package authors.  People who just build & install packages software can do so entirely with [[Cabal]] commands.  In particular, it's a bit hairy to get the best results from [[Haddock]] & [[hscolour]].

== Features ==

* Web-based, cross-package links in [[Haddock]] docs (documentation generated by [[Haddock]]).
* Syntax coloring via [[hscolour]], with per-project CSS.
* Links from the [[Haddock]] docs to [[hscolour]]'d code (per-module, and per-entity).
* Links from [[Haddock]] docs to wiki-based user comment pages (per-project and per-module), with automatic subscription (for email notification).
* Set up with [[darcs]] repositories on http://code.haskell.org or elsewhere.
* Make distribution tarballs and install on server.
* Automated download and build in a fresh local temp directory for testing.
* Copy [[Haddock]] docs to server (deprecated now that hackage has caught up with ghc).
* Generate editor tags files (via [[hasktags]]).
* Convert source files between dos-style and unix-style line endings.
* Customizable.

== Packages using cabal-make ==

To get a concrete sense of the first few of the features listed above, here are some links to docs for packages that use cabal-make. (Please add your own packages to this list when you use cabal-make.)
* [[Phooey]]: a simple, arrow-based functional GUI library
* [[DeepArrow]]: a framework for composable semantic editors
* [[TV]]: combined and separable packaging of functionality and interface
* [[GuiTV]]: GUIs for TV
* [[Checkers]]: Some [[QuickCheck]] helpers
* [[FieldTrip]]: Functional 3D
* [[Reactive]]: Functional reactive programming with a data-driven implementation

== Example use ==

On my Windows system, I've placed cabal-make at <code>c:\Haskell\cabal-make</code>, and I like to install Haskell packages under <code>c:\Haskell\packages</code>.  I might write a <code>Makefile</code> for the package [[checkers]] as follows:

{| class="wikitable"
 | style="padding:0px 20px 0px 20px;" |
<pre>
user = conal
cabal-make = c:/conal/Haskell/cabal-make
configure-dirs = --prefix=c:/Haskell/packages --datadir=c:/Haskell/packages --libdir=c:/Haskell/packages --bindir=c:/Haskell/packages/bin
hscolour-css = $(cabal-make)/hscolour.css

server = code.haskell.org
server-dir = /srv/code
server-url-dir =
include ../my-cabal-make.inc
</pre>
|}

To build [[checkers]], I run "<code>make</code>" with targets like "<code>configure</code>", "<code>build</code>", "<code>doc</code>", and "<code>install</code>".  Or "<code>all</code>" (default) for all of these targets.

A few [[darcs]]-related targets: 
* <code>pull</code> and <code>push</code>.
* <code>repo</code>: makes a remote repository
* <code>tag</code>: do "<code>darcs tag</code>" using current version (extracted from project [[Cabal]] file)
* <code>darcs-dist</code>: make a tarball and copy to server.
* <code>web-doc</code>: copy docs & colored sources to the server.
* <code>test-get-build</code>: Test by doing "<code>darcs get</code>", configure, and build in a fresh temp directory.

The target "<code>watch-comments</code>" sets up a subscription to the Haskell wiki talk pages that correspond to the package's modules (for the user comment links inserted in the [[Haddock]] docs.)

There are a few other targets as well.  See the source.

== Specializing ==

I use a trick for collecting my favorite setting to be saved across my own
packages.  The file is called "<code>my-cabal-make.inc</code>":

{| class="wikitable"
 | style="padding:0px 20px 0px 20px;" |
<pre>
user = conal
cabal-make = c:/Haskell/cabal-make
configure-dirs = --prefix=c:/Haskell/packages --datadir=c:/Haskell/packages
hscolour-css = $(cabal-make)/hscolour.css

include $(cabal-make)/cabal-make.inc
</pre>
|}

Then I just have to define <code>haddock_interfaces</code> and include <code>my-cabal-make</code>.  My [[checkers]] <code>Makefile</code> is really

{| class="wikitable"
 | style="padding:0px 20px 0px 20px;" |
<pre>
user = conal
cabal-make = c:/Haskell/cabal-make
configure-dirs = --prefix=c:/Haskell/packages --datadir=c:/Haskell/packages
hscolour-css = $(cabal-make)/hscolour.css

include $(cabal-make)/cabal-make.inc
</pre>
|}

== Dependencies ==

* [[Cabal]]
* [[darcs]] for push & pull targets
* [[Haddock]] and [[hscolour]] if you make your own docs
* [http://www.gnu.org/software/make GNU make]

== Use guidelines ==

* In order for cabal-make to work, you have to list each of your source modules on a line by itself, ''including'' the first one in the list (instead of placing it aside the Cabal directive). You can use "<code>make show-modules</code>" to see if your list of source modules is extracted correctly.
* Cabal-make assumes your source code to be under <code>src</code>.  Overridable via <code>top-src-dir</code>.

== Get it ==

<blockquote>
<tt>darcs get --partial http://code.haskell.org/~conal/code/cabal-make</tt>
</blockquote>

== Customization ==

There are several customization variables defined in cabal-make that can be overriden.  Simply define these variables in your makefile before "<code>cabal-make.inc</code>".  See the "Settings" section of the source.

== To do ==

* Eliminate the restrictions/assumptions listed in [[#Use guidelines]].

[[Category:Tools]]
[[Category:Cabal]]
[[Category:Libraries]]
[[Category:Packages]]
